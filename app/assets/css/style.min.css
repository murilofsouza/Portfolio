/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}body{color:#444;transition:all .4s ease-in .3s}a,button{outline:none;border:none;background:none}a{color:#c4a424}p{font-family:Karla,sans-serif;font-size:16px;color:#757575;line-height:2;letter-spacing:.5px}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{text-align:center;position:relative;z-index:2}.button_container{height:35px;width:35px;cursor:pointer;z-index:4;transition:opacity .25s ease;background:#4a4a4a;float:left;padding:10px 12px;border-radius:20px;position:relative;margin-top:20px;box-shadow:-10px 10px 20px 0 rgba(0,0,0,.19)}.button_container:hover{opacity:.7}.button_container.active .top{-webkit-transform:translateY(2px) translateX(0) rotate(45deg);transform:translateY(2px) translateX(0) rotate(45deg);background:#fff}.button_container.active .bottom{-webkit-transform:translateY(-3px) translateX(0) rotate(-45deg);transform:translateY(-3px) translateX(0) rotate(-45deg);background:#fff}.button_container span{background:#fff;border:none;height:1px;width:100%;transition:all .35s ease;cursor:pointer;display:block;margin-top:4px;border-radius:100px}.button_container span:nth-of-type(2){top:11px}.button_container span:nth-of-type(3){top:22px}.overlay{position:fixed;background:rgba(0,0,0,.9);top:0;left:0;width:100%;height:0%;opacity:0;visibility:hidden;transition:opacity .35s,visibility .35s,height .35s;overflow:hidden;z-index:3}.overlay.open{opacity:1;visibility:visible;height:100%}.overlay.open li{-webkit-animation:a .5s ease forwards;animation:a .5s ease forwards;-webkit-animation-delay:.35s;animation-delay:.35s}.overlay.open li:nth-of-type(2){-webkit-animation-delay:.4s;animation-delay:.4s}.overlay.open li:nth-of-type(3){-webkit-animation-delay:.45s;animation-delay:.45s}.overlay.open li:nth-of-type(4){-webkit-animation-delay:.5s;animation-delay:.5s}.overlay nav{height:35%;width:80vw;top:75vh;-webkit-transform:translateY(-50%);transform:translateY(-50%);font-size:1.6em;font-weight:400;text-align:left;letter-spacing:1.5px}.overlay nav,.overlay ul{position:relative;margin:0 auto}.overlay ul{list-style:none;padding:0;display:inline-block;height:100%}.overlay ul li{display:block;height:25%;min-height:50px;position:relative;opacity:0}.overlay ul li a{display:block;position:relative;color:#fff;text-decoration:none;overflow:hidden}.overlay ul li a:active:after,.overlay ul li a:focus:after,.overlay ul li a:hover:after{width:100%}.overlay ul li a:after{content:'';position:absolute;bottom:0;left:50%;width:0;-webkit-transform:translateX(-50%);transform:translateX(-50%);height:3px;background:#fff;transition:.35s}@-webkit-keyframes a{0%{opacity:0;left:20%}to{opacity:1;left:0}}@keyframes a{0%{opacity:0;left:20%}to{opacity:1;left:0}}.logo{display:inline-block;margin:15px 0 0 33.625px}.social-media{float:right;margin-top:25px}.social-media ul{margin:0;padding:0}.social-media ul li{display:inline-block;list-style:none;vertical-align:middle}.social-media ul li.nav-behance{margin-right:15px}@media only screen and (min-width:1024px){.footer{position:fixed;width:100%;bottom:15px}}.footer p{font-size:12px;letter-spacing:.8px}.footer p,.footer p a{color:#9b9b9b}.footer .col:last-child{text-align:right;margin-top:15px}.footer .col:last-child div{display:inline-block;vertical-align:middle}.footer .col:last-child div a{padding:15px}.link{padding:0}.btn-principal,.link{color:#c4a424;cursor:pointer}.btn-principal{border:none;background:none;font-family:Karla;font-size:16px;background:url(../img/link-arrow.png) no-repeat 100%;padding:15px 40px 15px 0;text-decoration:none}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.container{max-width:1140px;margin:0 auto;padding:0 15px;box-sizing:content-box}.row{margin-right:-15px;margin-left:-15px}.row .col{float:left;width:50%;padding:0 15px;position:relative}@media (max-width:768px){.row .col{width:100%}.only-desk{display:none}}@media only screen and (min-width:320px){.main-home{height:auto}.main-home .title-home{font-family:Abril Fatface,cursive;font-size:76px;font-weight:100;margin:5vh 0 0}.main-home .title-home+span{display:block;padding-left:190px;font-size:20px;margin-top:-15px;letter-spacing:.5px;font-family:Karla;font-weight:100}.main-home .img-home{position:absolute;top:5vh;right:0;width:48vw;z-index:1}.footer p{margin-top:60px}}@media only screen and (min-width:769px){body,html{overflow:hidden}.main-home .col{height:80vh}.main-home .col .btn-principal{position:absolute;top:360px;z-index:1}.footer p{margin-top:0}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
